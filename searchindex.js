Search.setIndex({"docnames": ["index", "symnum", "symnum.array", "symnum.codegen", "symnum.diffops", "symnum.diffops.numpy", "symnum.diffops.symbolic", "symnum.numpy"], "filenames": ["index.rst", "symnum.rst", "symnum.array.rst", "symnum.codegen.rst", "symnum.diffops.rst", "symnum.diffops.numpy.rst", "symnum.diffops.symbolic.rst", "symnum.numpy.rst"], "titles": ["Welcome to SymNum\u2019s documentation!", "symnum package", "symnum.array module", "symnum.codegen module", "symnum.diffops package", "symnum.diffops.numpy module", "symnum.diffops.symbolic module", "symnum.numpy module"], "terms": {"i": [0, 1, 2, 3, 5, 6], "python": [0, 3], "packag": [0, 3], "act": [0, 1, 2, 5, 6], "bridg": 0, "between": 0, "numpi": [0, 1, 2, 3, 4, 6], "sympi": [0, 1, 2, 3, 7], "provid": [0, 3], "like": [0, 2, 3], "interfac": [0, 2], "can": [0, 2], "us": [0, 1, 2, 3, 7], "symbol": [0, 1, 2, 3, 4], "defin": [0, 1, 2, 3, 5], "function": [0, 1, 2, 3, 4, 5, 6], "which": [0, 1, 2, 3, 5, 6], "take": [0, 1, 3, 5, 6], "arrai": [0, 1, 3, 5, 6, 7], "argument": [0, 1, 2, 3, 5, 6], "return": [0, 1, 2, 3, 5, 6], "scalar": [0, 1, 2, 3, 5, 6], "valu": [0, 1, 3, 5, 6], "A": 0, "seri": 0, "autograd": [0, 4, 5, 6], "style": [0, 2, 4, 5, 6], "differenti": [0, 2, 4, 5, 6], "oper": [0, 1, 2, 4, 5, 6], "ar": 0, "also": 0, "construct": [0, 1, 2], "deriv": [0, 1, 2, 5, 6], "option": [0, 1, 2, 3], "gener": [0, 1, 3, 5, 6], "code": [0, 1, 3, 5], "numer": [0, 2], "evalu": [0, 1, 3, 5, 6], "grad": [0, 1, 4, 5, 6], "gradient": [0, 1, 4, 5, 6], "hessian": [0, 1, 4, 5, 6], "hessian_vector_product": [0, 1, 4, 5, 6], "jacobian": [0, 1, 4, 5, 6], "jacobian_vector_product": [0, 1, 4, 5, 6], "matrix_hessian_product": [0, 1, 4, 5, 6], "matrix_tressian_product": [0, 1, 4, 5, 6], "named_arrai": [0, 1, 2], "numpifi": [0, 1, 3], "numpify_func": [0, 1, 3], "vector_jacobian_product": [0, 1, 4, 5, 6], "subpackag": 0, "diffop": [0, 1], "submodul": 0, "modul": [0, 1, 4], "codegen": [0, 1, 5], "func": [1, 2, 3, 5, 6], "arg_shap": [1, 3, 5], "wrt": [1, 5, 6], "0": [1, 2, 3, 5, 6, 7], "return_aux": [1, 5, 6], "fals": [1, 3, 5, 6], "kwarg": [1, 3, 5, 7], "The": [1, 3, 5, 6], "pass": [1, 3, 5, 6], "should": [1, 5, 6], "likewis": [1, 5, 6], "paramet": [1, 2, 3, 5, 6], "callabl": [1, 2, 3, 5, 6], "scalarlik": [1, 2, 3, 5, 6], "one": [1, 2, 3, 5, 6], "more": [1, 2, 3, 5, 6], "tupl": [1, 2, 3, 5, 6], "int": [1, 2, 3, 5, 6], "variabl": [1, 2, 3, 5], "length": [1, 3, 5], "list": [1, 2, 3, 5], "shape": [1, 2, 3, 5, 6, 7], "e": [1, 3, 5, 6], "g": [1, 3, 5], "two": [1, 2, 3, 5], "x": [1, 3, 5, 6, 7], "y": [1, 3, 5], "an": [1, 2, 3, 5, 6], "2": [1, 2, 3, 5, 6], "4": [1, 3, 5, 6], "3": [1, 3, 5, 6], "call": [1, 2, 3, 5], "signatur": [1, 3, 5], "would": [1, 2, 3, 5], "form": [1, 3, 5], "index": [1, 2, 5, 6], "respect": [1, 2, 5, 6], "bool": [1, 2, 3, 5, 6], "whether": [1, 2, 3, 5, 6], "both": [1, 2, 5, 6], "true": [1, 3, 5, 6], "just": [1, 3, 5, 6], "ani": [1, 2, 3, 5], "keyword": [1, 3, 5], "generate_func": [1, 3, 5], "type": [1, 2, 3, 5, 6], "union": [1, 2, 3, 5, 6], "arraylik": [1, 2, 5, 6], "vector": [1, 5, 6], "product": [1, 5, 6], "For": [1, 5, 6], "singl": [1, 2, 5, 6], "n": [1, 2, 5, 6, 7], "dimension": [1, 2, 5, 6], "input": [1, 3, 5, 6], "v": [1, 5, 6], "same": [1, 5, 6], "we": [1, 5, 6], "have": [1, 5, 6], "follow": [1, 5, 6], "equival": [1, 2, 5, 6], "tensordot": [1, 5, 6], "where": [1, 5, 6], "its": [1, 5, 6], "semant": [1, 2, 5, 6], "b": [1, 5, 6], "sum": [1, 2, 5, 6, 7], "compon": [1, 5, 6], "over": [1, 2, 5, 6], "last": [1, 5, 6], "ax": [1, 2, 5, 6], "dimens": [1, 2, 5, 6], "first": [1, 5, 6], "": [1, 2, 3, 5, 6], "matrix": [1, 5, 6], "k": [1, 5, 6, 7], "m": [1, 5, 6, 7], "tressian": [1, 5, 6], "name": [1, 2, 3], "dtype": [1, 2, 7], "none": [1, 2, 3, 7], "sourc": [1, 2, 3, 6, 7], "creat": [1, 2, 3], "common": [1, 2], "prefix": [1, 2], "element": [1, 2], "str": [1, 2, 3], "shapelik": [1, 2], "dtypelik": [1, 2], "index_list": [1, 2], "iter": [1, 2, 3], "string": [1, 2, 3], "valid": [1, 2], "comma": [1, 2], "separ": [1, 2], "indic": [1, 2], "exampl": [1, 2], "give": [1, 2], "1": [1, 2], "symbolicarrai": [1, 2, 3], "decor": [1, 3], "convert": [1, 2, 3], "integ": [1, 3], "accept": [1, 3], "correspond": [1, 2, 3], "ndarrai": [1, 2, 3], "expr": [1, 2, 3], "sympy_func": [1, 3], "from": [1, 2, 3], "express": [1, 2, 3], "as_symbolic_arrai": [1, 2], "binary_broadcasting_func": [1, 2], "infer_array_dtyp": [1, 2], "infer_scalar_dtyp": [1, 2], "is_arrai": [1, 2], "is_scalar": [1, 2], "is_sympy_arrai": [1, 2], "is_valid_shap": [1, 2], "unary_elementwise_func": [1, 2], "functionexpress": [1, 3], "tuplearrayprint": [1, 3], "ab": [1, 7], "absolut": [1, 7], "add": [1, 7], "angl": [1, 7], "arcco": [1, 7], "arccosh": [1, 7], "arcsin": [1, 7], "arcsinh": [1, 7], "arctan": [1, 7], "arctan2": [1, 7], "arctanh": [1, 7], "ceil": [1, 7], "concaten": [1, 7], "conj": [1, 7], "conjug": [1, 7], "co": [1, 7], "cosh": [1, 7], "divid": [1, 7], "exp": [1, 7], "expm1": [1, 7], "ey": [1, 7], "floor": [1, 7], "full": [1, 7], "ident": [1, 7], "imag": [1, 2, 7], "iscomplex": [1, 7], "isfinit": [1, 7], "isinf": [1, 7], "isnan": [1, 7], "isneginf": [1, 7], "isposinf": [1, 7], "isreal": [1, 7], "log": [1, 7], "log10": [1, 7], "log1p": [1, 7], "log2": [1, 7], "logical_and": [1, 7], "logical_not": [1, 7], "logical_or": [1, 7], "logical_xor": [1, 7], "matmul": [1, 7], "maximum": [1, 7], "minimum": [1, 7], "multipli": [1, 7], "ones": [1, 7], "power": [1, 7], "prod": [1, 2, 7], "real": [1, 2, 7], "sign": [1, 7], "sin": [1, 7], "sinh": [1, 7], "sqrt": [1, 7], "subtract": [1, 7], "tan": [1, 7], "tanh": [1, 7], "zero": [1, 7], "class": [2, 3], "object_": [2, 7], "base": [2, 3], "object": [2, 3], "specif": 2, "implement": [2, 3, 7], "overload": 2, "broadcast": 2, "either": 2, "nest": [2, 3], "sequenc": 2, "exist": 2, "size": 2, "each": 2, "axi": [2, 7], "If": [2, 3], "set": [2, 3], "default": [2, 3], "attribut": 2, "datatyp": 2, "when": 2, "appropri": 2, "infer": 2, "properti": [2, 3], "t": 2, "diff": 2, "comput": 2, "wrapper": 2, "ndimarrai": 2, "One": 2, "_supportsdtyp": 2, "supportsindex": 2, "_dtypedict": 2, "flat": 2, "flatten": 2, "free_symbol": 2, "all": 2, "free": 2, "boolean": 2, "float": 2, "complex": 2, "number": 2, "matrixbas": 2, "_scalartype_co": 2, "ndim": 2, "reshap": 2, "sub": [2, 3], "arg": [2, 3, 7], "substitut": 2, "old": 2, "new": 2, "subsitut": 2, "pair": 2, "replac": 2, "process": 2, "order": [2, 3], "given": [2, 3], "dictionari": 2, "map": 2, "subsititut": 2, "appli": 2, "tolist": 2, "transpos": 2, "instanc": [2, 3], "alreadi": 2, "origin": 2, "entri": 2, "doc": 2, "wrap": 2, "binari": 2, "assign": 2, "__name__": 2, "docstr": 2, "__doc__": 2, "safe": 2, "repres": 2, "obj": 2, "check": 2, "unari": 2, "elementwis": 2, "util": 3, "return_v": 3, "__call__": 3, "posit": 3, "numpyprint": 3, "printer": 3, "liter": 3, "rather": 3, "than": 3, "print": 3, "numba": 3, "compat": 3, "instead": 3, "codeprint": 3, "__init__": 3, "specifi": 3, "current": 3, "cupi": 3, "jax": 3, "doprint": 3, "assign_to": 3, "matrixsymbol": 3, "multipl": 3, "emptyprint": 3, "languag": 3, "parenthes": 3, "item": 3, "level": 3, "strict": 3, "printmethod": 3, "_pythoncod": 3, "reserved_word": 3, "assert": 3, "break": 3, "continu": 3, "def": 3, "del": 3, "elif": 3, "els": 3, "except": 3, "final": 3, "global": 3, "import": 3, "lambda": 3, "nonloc": 3, "rais": 3, "try": 3, "while": 3, "yield": 3, "classmethod": 3, "set_global_set": 3, "system": 3, "wide": 3, "stringifi": 3, "sep": 3, "tab": 3, "func_nam": 3, "numpy_modul": 3, "namespac": 3, "jit": 3, "simplifi": 3, "produc": 3, "represent": 3, "subclass": 3, "retain": 3, "onli": 3, "support": 3, "moduletyp": 3, "api": [3, 7], "dict": 3, "temporari": 3, "enabl": 3, "time": 3, "compil": 3, "requir": 3, "instal": 3, "environ": 3, "befor": 3, "subset": 7, "primit": 7, "x1": 7, "x2": 7, "fill_valu": 7}, "objects": {"": [[1, 0, 0, "-", "symnum"]], "symnum": [[2, 0, 0, "-", "array"], [3, 0, 0, "-", "codegen"], [4, 0, 0, "-", "diffops"], [1, 4, 1, "", "grad"], [1, 4, 1, "", "gradient"], [1, 4, 1, "", "hessian"], [1, 4, 1, "", "hessian_vector_product"], [1, 4, 1, "", "jacobian"], [1, 4, 1, "", "jacobian_vector_product"], [1, 4, 1, "", "matrix_hessian_product"], [1, 4, 1, "", "matrix_tressian_product"], [1, 4, 1, "", "named_array"], [1, 4, 1, "", "numpify"], [1, 4, 1, "", "numpify_func"], [7, 0, 0, "-", "numpy"], [1, 4, 1, "", "vector_jacobian_product"]], "symnum.array": [[2, 1, 1, "", "SymbolicArray"], [2, 4, 1, "", "as_symbolic_array"], [2, 4, 1, "", "binary_broadcasting_func"], [2, 4, 1, "", "infer_array_dtype"], [2, 4, 1, "", "infer_scalar_dtype"], [2, 4, 1, "", "is_array"], [2, 4, 1, "", "is_scalar"], [2, 4, 1, "", "is_sympy_array"], [2, 4, 1, "", "is_valid_shape"], [2, 4, 1, "", "named_array"], [2, 4, 1, "", "unary_elementwise_func"]], "symnum.array.SymbolicArray": [[2, 2, 1, "", "T"], [2, 3, 1, "", "diff"], [2, 2, 1, "", "dtype"], [2, 2, 1, "", "flat"], [2, 3, 1, "", "flatten"], [2, 2, 1, "", "free_symbols"], [2, 2, 1, "", "imag"], [2, 2, 1, "", "ndim"], [2, 3, 1, "", "prod"], [2, 2, 1, "", "real"], [2, 3, 1, "", "reshape"], [2, 2, 1, "", "shape"], [2, 2, 1, "", "size"], [2, 3, 1, "", "subs"], [2, 3, 1, "", "sum"], [2, 3, 1, "", "tolist"], [2, 3, 1, "", "transpose"]], "symnum.codegen": [[3, 1, 1, "", "FunctionExpression"], [3, 1, 1, "", "TupleArrayPrinter"], [3, 4, 1, "", "generate_func"], [3, 4, 1, "", "numpify"], [3, 4, 1, "", "numpify_func"]], "symnum.codegen.FunctionExpression": [[3, 3, 1, "", "__call__"], [3, 5, 1, "", "args"], [3, 5, 1, "", "return_val"]], "symnum.codegen.TupleArrayPrinter": [[3, 3, 1, "", "doprint"], [3, 3, 1, "", "emptyPrinter"], [3, 5, 1, "", "language"], [3, 5, 1, "", "modules"], [3, 2, 1, "", "order"], [3, 3, 1, "", "parenthesize"], [3, 5, 1, "", "printmethod"], [3, 5, 1, "", "reserved_words"], [3, 3, 1, "", "set_global_settings"], [3, 3, 1, "", "stringify"], [3, 5, 1, "", "tab"]], "symnum.diffops": [[5, 0, 0, "-", "numpy"], [6, 0, 0, "-", "symbolic"]], "symnum.diffops.numpy": [[5, 4, 1, "", "grad"], [5, 4, 1, "", "gradient"], [5, 4, 1, "", "hessian"], [5, 4, 1, "", "hessian_vector_product"], [5, 4, 1, "", "jacobian"], [5, 4, 1, "", "jacobian_vector_product"], [5, 4, 1, "", "matrix_hessian_product"], [5, 4, 1, "", "matrix_tressian_product"], [5, 4, 1, "", "vector_jacobian_product"]], "symnum.diffops.symbolic": [[6, 4, 1, "", "grad"], [6, 4, 1, "", "gradient"], [6, 4, 1, "", "hessian"], [6, 4, 1, "", "hessian_vector_product"], [6, 4, 1, "", "jacobian"], [6, 4, 1, "", "jacobian_vector_product"], [6, 4, 1, "", "matrix_hessian_product"], [6, 4, 1, "", "matrix_tressian_product"], [6, 4, 1, "", "vector_jacobian_product"]], "symnum.numpy": [[7, 4, 1, "", "abs"], [7, 4, 1, "", "absolute"], [7, 4, 1, "", "add"], [7, 4, 1, "", "angle"], [7, 4, 1, "", "arccos"], [7, 4, 1, "", "arccosh"], [7, 4, 1, "", "arcsin"], [7, 4, 1, "", "arcsinh"], [7, 4, 1, "", "arctan"], [7, 4, 1, "", "arctan2"], [7, 4, 1, "", "arctanh"], [7, 4, 1, "", "array"], [7, 4, 1, "", "ceil"], [7, 4, 1, "", "concatenate"], [7, 4, 1, "", "conj"], [7, 4, 1, "", "conjugate"], [7, 4, 1, "", "cos"], [7, 4, 1, "", "cosh"], [7, 4, 1, "", "divide"], [7, 4, 1, "", "exp"], [7, 4, 1, "", "expm1"], [7, 4, 1, "", "eye"], [7, 4, 1, "", "floor"], [7, 4, 1, "", "full"], [7, 4, 1, "", "identity"], [7, 4, 1, "", "imag"], [7, 4, 1, "", "iscomplex"], [7, 4, 1, "", "isfinite"], [7, 4, 1, "", "isinf"], [7, 4, 1, "", "isnan"], [7, 4, 1, "", "isneginf"], [7, 4, 1, "", "isposinf"], [7, 4, 1, "", "isreal"], [7, 4, 1, "", "log"], [7, 4, 1, "", "log10"], [7, 4, 1, "", "log1p"], [7, 4, 1, "", "log2"], [7, 4, 1, "", "logical_and"], [7, 4, 1, "", "logical_not"], [7, 4, 1, "", "logical_or"], [7, 4, 1, "", "logical_xor"], [7, 4, 1, "", "matmul"], [7, 4, 1, "", "maximum"], [7, 4, 1, "", "minimum"], [7, 4, 1, "", "multiply"], [7, 4, 1, "", "ones"], [7, 4, 1, "", "power"], [7, 4, 1, "", "prod"], [7, 4, 1, "", "real"], [7, 4, 1, "", "sign"], [7, 4, 1, "", "sin"], [7, 4, 1, "", "sinh"], [7, 4, 1, "", "sqrt"], [7, 4, 1, "", "subtract"], [7, 4, 1, "", "sum"], [7, 4, 1, "", "tan"], [7, 4, 1, "", "tanh"], [7, 4, 1, "", "zeros"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "symnum": [0, 1, 2, 3, 4, 5, 6, 7], "": 0, "document": 0, "content": 0, "packag": [1, 4], "subpackag": 1, "submodul": [1, 4], "arrai": 2, "modul": [2, 3, 5, 6, 7], "codegen": 3, "diffop": [4, 5, 6], "numpi": [5, 7], "symbol": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"Welcome to SymNum\u2019s documentation!": [[0, "welcome-to-symnum-s-documentation"]], "Contents:": [[0, null]], "symnum package": [[1, "module-symnum"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [4, "submodules"]], "symnum.array module": [[2, "module-symnum.array"]], "symnum.codegen module": [[3, "module-symnum.codegen"]], "symnum.diffops package": [[4, "module-symnum.diffops"]], "symnum.diffops.numpy module": [[5, "module-symnum.diffops.numpy"]], "symnum.diffops.symbolic module": [[6, "module-symnum.diffops.symbolic"]], "symnum.numpy module": [[7, "module-symnum.numpy"]]}, "indexentries": {"grad() (in module symnum)": [[1, "symnum.grad"]], "gradient() (in module symnum)": [[1, "symnum.gradient"]], "hessian() (in module symnum)": [[1, "symnum.hessian"]], "hessian_vector_product() (in module symnum)": [[1, "symnum.hessian_vector_product"]], "jacobian() (in module symnum)": [[1, "symnum.jacobian"]], "jacobian_vector_product() (in module symnum)": [[1, "symnum.jacobian_vector_product"]], "matrix_hessian_product() (in module symnum)": [[1, "symnum.matrix_hessian_product"]], "matrix_tressian_product() (in module symnum)": [[1, "symnum.matrix_tressian_product"]], "module": [[1, "module-symnum"], [2, "module-symnum.array"], [3, "module-symnum.codegen"], [4, "module-symnum.diffops"], [5, "module-symnum.diffops.numpy"], [6, "module-symnum.diffops.symbolic"], [7, "module-symnum.numpy"]], "named_array() (in module symnum)": [[1, "symnum.named_array"]], "numpify() (in module symnum)": [[1, "symnum.numpify"]], "numpify_func() (in module symnum)": [[1, "symnum.numpify_func"]], "symnum": [[1, "module-symnum"]], "vector_jacobian_product() (in module symnum)": [[1, "symnum.vector_jacobian_product"]], "symbolicarray (class in symnum.array)": [[2, "symnum.array.SymbolicArray"]], "t (symnum.array.symbolicarray property)": [[2, "symnum.array.SymbolicArray.T"]], "as_symbolic_array() (in module symnum.array)": [[2, "symnum.array.as_symbolic_array"]], "binary_broadcasting_func() (in module symnum.array)": [[2, "symnum.array.binary_broadcasting_func"]], "diff() (symnum.array.symbolicarray method)": [[2, "symnum.array.SymbolicArray.diff"]], "dtype (symnum.array.symbolicarray property)": [[2, "symnum.array.SymbolicArray.dtype"]], "flat (symnum.array.symbolicarray property)": [[2, "symnum.array.SymbolicArray.flat"]], "flatten() (symnum.array.symbolicarray method)": [[2, "symnum.array.SymbolicArray.flatten"]], "free_symbols (symnum.array.symbolicarray property)": [[2, "symnum.array.SymbolicArray.free_symbols"]], "imag (symnum.array.symbolicarray property)": [[2, "symnum.array.SymbolicArray.imag"]], "infer_array_dtype() (in module symnum.array)": [[2, "symnum.array.infer_array_dtype"]], "infer_scalar_dtype() (in module symnum.array)": [[2, "symnum.array.infer_scalar_dtype"]], "is_array() (in module symnum.array)": [[2, "symnum.array.is_array"]], "is_scalar() (in module symnum.array)": [[2, "symnum.array.is_scalar"]], "is_sympy_array() (in module symnum.array)": [[2, "symnum.array.is_sympy_array"]], "is_valid_shape() (in module symnum.array)": [[2, "symnum.array.is_valid_shape"]], "named_array() (in module symnum.array)": [[2, "symnum.array.named_array"]], "ndim (symnum.array.symbolicarray property)": [[2, "symnum.array.SymbolicArray.ndim"]], "prod() (symnum.array.symbolicarray method)": [[2, "symnum.array.SymbolicArray.prod"]], "real (symnum.array.symbolicarray property)": [[2, "symnum.array.SymbolicArray.real"]], "reshape() (symnum.array.symbolicarray method)": [[2, "symnum.array.SymbolicArray.reshape"]], "shape (symnum.array.symbolicarray property)": [[2, "symnum.array.SymbolicArray.shape"]], "size (symnum.array.symbolicarray property)": [[2, "symnum.array.SymbolicArray.size"]], "subs() (symnum.array.symbolicarray method)": [[2, "symnum.array.SymbolicArray.subs"]], "sum() (symnum.array.symbolicarray method)": [[2, "symnum.array.SymbolicArray.sum"]], "symnum.array": [[2, "module-symnum.array"]], "tolist() (symnum.array.symbolicarray method)": [[2, "symnum.array.SymbolicArray.tolist"]], "transpose() (symnum.array.symbolicarray method)": [[2, "symnum.array.SymbolicArray.transpose"]], "unary_elementwise_func() (in module symnum.array)": [[2, "symnum.array.unary_elementwise_func"]], "functionexpression (class in symnum.codegen)": [[3, "symnum.codegen.FunctionExpression"]], "tuplearrayprinter (class in symnum.codegen)": [[3, "symnum.codegen.TupleArrayPrinter"]], "__call__() (symnum.codegen.functionexpression method)": [[3, "symnum.codegen.FunctionExpression.__call__"]], "args (symnum.codegen.functionexpression attribute)": [[3, "symnum.codegen.FunctionExpression.args"]], "doprint() (symnum.codegen.tuplearrayprinter method)": [[3, "symnum.codegen.TupleArrayPrinter.doprint"]], "emptyprinter() (symnum.codegen.tuplearrayprinter method)": [[3, "symnum.codegen.TupleArrayPrinter.emptyPrinter"]], "generate_func() (in module symnum.codegen)": [[3, "symnum.codegen.generate_func"]], "language (symnum.codegen.tuplearrayprinter attribute)": [[3, "symnum.codegen.TupleArrayPrinter.language"]], "modules (symnum.codegen.tuplearrayprinter attribute)": [[3, "symnum.codegen.TupleArrayPrinter.modules"]], "numpify() (in module symnum.codegen)": [[3, "symnum.codegen.numpify"]], "numpify_func() (in module symnum.codegen)": [[3, "symnum.codegen.numpify_func"]], "order (symnum.codegen.tuplearrayprinter property)": [[3, "symnum.codegen.TupleArrayPrinter.order"]], "parenthesize() (symnum.codegen.tuplearrayprinter method)": [[3, "symnum.codegen.TupleArrayPrinter.parenthesize"]], "printmethod (symnum.codegen.tuplearrayprinter attribute)": [[3, "symnum.codegen.TupleArrayPrinter.printmethod"]], "reserved_words (symnum.codegen.tuplearrayprinter attribute)": [[3, "symnum.codegen.TupleArrayPrinter.reserved_words"]], "return_val (symnum.codegen.functionexpression attribute)": [[3, "symnum.codegen.FunctionExpression.return_val"]], "set_global_settings() (symnum.codegen.tuplearrayprinter class method)": [[3, "symnum.codegen.TupleArrayPrinter.set_global_settings"]], "stringify() (symnum.codegen.tuplearrayprinter method)": [[3, "symnum.codegen.TupleArrayPrinter.stringify"]], "symnum.codegen": [[3, "module-symnum.codegen"]], "tab (symnum.codegen.tuplearrayprinter attribute)": [[3, "symnum.codegen.TupleArrayPrinter.tab"]], "symnum.diffops": [[4, "module-symnum.diffops"]], "grad() (in module symnum.diffops.numpy)": [[5, "symnum.diffops.numpy.grad"]], "gradient() (in module symnum.diffops.numpy)": [[5, "symnum.diffops.numpy.gradient"]], "hessian() (in module symnum.diffops.numpy)": [[5, "symnum.diffops.numpy.hessian"]], "hessian_vector_product() (in module symnum.diffops.numpy)": [[5, "symnum.diffops.numpy.hessian_vector_product"]], "jacobian() (in module symnum.diffops.numpy)": [[5, "symnum.diffops.numpy.jacobian"]], "jacobian_vector_product() (in module symnum.diffops.numpy)": [[5, "symnum.diffops.numpy.jacobian_vector_product"]], "matrix_hessian_product() (in module symnum.diffops.numpy)": [[5, "symnum.diffops.numpy.matrix_hessian_product"]], "matrix_tressian_product() (in module symnum.diffops.numpy)": [[5, "symnum.diffops.numpy.matrix_tressian_product"]], "symnum.diffops.numpy": [[5, "module-symnum.diffops.numpy"]], "vector_jacobian_product() (in module symnum.diffops.numpy)": [[5, "symnum.diffops.numpy.vector_jacobian_product"]], "grad() (in module symnum.diffops.symbolic)": [[6, "symnum.diffops.symbolic.grad"]], "gradient() (in module symnum.diffops.symbolic)": [[6, "symnum.diffops.symbolic.gradient"]], "hessian() (in module symnum.diffops.symbolic)": [[6, "symnum.diffops.symbolic.hessian"]], "hessian_vector_product() (in module symnum.diffops.symbolic)": [[6, "symnum.diffops.symbolic.hessian_vector_product"]], "jacobian() (in module symnum.diffops.symbolic)": [[6, "symnum.diffops.symbolic.jacobian"]], "jacobian_vector_product() (in module symnum.diffops.symbolic)": [[6, "symnum.diffops.symbolic.jacobian_vector_product"]], "matrix_hessian_product() (in module symnum.diffops.symbolic)": [[6, "symnum.diffops.symbolic.matrix_hessian_product"]], "matrix_tressian_product() (in module symnum.diffops.symbolic)": [[6, "symnum.diffops.symbolic.matrix_tressian_product"]], "symnum.diffops.symbolic": [[6, "module-symnum.diffops.symbolic"]], "vector_jacobian_product() (in module symnum.diffops.symbolic)": [[6, "symnum.diffops.symbolic.vector_jacobian_product"]], "abs() (in module symnum.numpy)": [[7, "symnum.numpy.abs"]], "absolute() (in module symnum.numpy)": [[7, "symnum.numpy.absolute"]], "add() (in module symnum.numpy)": [[7, "symnum.numpy.add"]], "angle() (in module symnum.numpy)": [[7, "symnum.numpy.angle"]], "arccos() (in module symnum.numpy)": [[7, "symnum.numpy.arccos"]], "arccosh() (in module symnum.numpy)": [[7, "symnum.numpy.arccosh"]], "arcsin() (in module symnum.numpy)": [[7, "symnum.numpy.arcsin"]], "arcsinh() (in module symnum.numpy)": [[7, "symnum.numpy.arcsinh"]], "arctan() (in module symnum.numpy)": [[7, "symnum.numpy.arctan"]], "arctan2() (in module symnum.numpy)": [[7, "symnum.numpy.arctan2"]], "arctanh() (in module symnum.numpy)": [[7, "symnum.numpy.arctanh"]], "array() (in module symnum.numpy)": [[7, "symnum.numpy.array"]], "ceil() (in module symnum.numpy)": [[7, "symnum.numpy.ceil"]], "concatenate() (in module symnum.numpy)": [[7, "symnum.numpy.concatenate"]], "conj() (in module symnum.numpy)": [[7, "symnum.numpy.conj"]], "conjugate() (in module symnum.numpy)": [[7, "symnum.numpy.conjugate"]], "cos() (in module symnum.numpy)": [[7, "symnum.numpy.cos"]], "cosh() (in module symnum.numpy)": [[7, "symnum.numpy.cosh"]], "divide() (in module symnum.numpy)": [[7, "symnum.numpy.divide"]], "exp() (in module symnum.numpy)": [[7, "symnum.numpy.exp"]], "expm1() (in module symnum.numpy)": [[7, "symnum.numpy.expm1"]], "eye() (in module symnum.numpy)": [[7, "symnum.numpy.eye"]], "floor() (in module symnum.numpy)": [[7, "symnum.numpy.floor"]], "full() (in module symnum.numpy)": [[7, "symnum.numpy.full"]], "identity() (in module symnum.numpy)": [[7, "symnum.numpy.identity"]], "imag() (in module symnum.numpy)": [[7, "symnum.numpy.imag"]], "iscomplex() (in module symnum.numpy)": [[7, "symnum.numpy.iscomplex"]], "isfinite() (in module symnum.numpy)": [[7, "symnum.numpy.isfinite"]], "isinf() (in module symnum.numpy)": [[7, "symnum.numpy.isinf"]], "isnan() (in module symnum.numpy)": [[7, "symnum.numpy.isnan"]], "isneginf() (in module symnum.numpy)": [[7, "symnum.numpy.isneginf"]], "isposinf() (in module symnum.numpy)": [[7, "symnum.numpy.isposinf"]], "isreal() (in module symnum.numpy)": [[7, "symnum.numpy.isreal"]], "log() (in module symnum.numpy)": [[7, "symnum.numpy.log"]], "log10() (in module symnum.numpy)": [[7, "symnum.numpy.log10"]], "log1p() (in module symnum.numpy)": [[7, "symnum.numpy.log1p"]], "log2() (in module symnum.numpy)": [[7, "symnum.numpy.log2"]], "logical_and() (in module symnum.numpy)": [[7, "symnum.numpy.logical_and"]], "logical_not() (in module symnum.numpy)": [[7, "symnum.numpy.logical_not"]], "logical_or() (in module symnum.numpy)": [[7, "symnum.numpy.logical_or"]], "logical_xor() (in module symnum.numpy)": [[7, "symnum.numpy.logical_xor"]], "matmul() (in module symnum.numpy)": [[7, "symnum.numpy.matmul"]], "maximum() (in module symnum.numpy)": [[7, "symnum.numpy.maximum"]], "minimum() (in module symnum.numpy)": [[7, "symnum.numpy.minimum"]], "multiply() (in module symnum.numpy)": [[7, "symnum.numpy.multiply"]], "ones() (in module symnum.numpy)": [[7, "symnum.numpy.ones"]], "power() (in module symnum.numpy)": [[7, "symnum.numpy.power"]], "prod() (in module symnum.numpy)": [[7, "symnum.numpy.prod"]], "real() (in module symnum.numpy)": [[7, "symnum.numpy.real"]], "sign() (in module symnum.numpy)": [[7, "symnum.numpy.sign"]], "sin() (in module symnum.numpy)": [[7, "symnum.numpy.sin"]], "sinh() (in module symnum.numpy)": [[7, "symnum.numpy.sinh"]], "sqrt() (in module symnum.numpy)": [[7, "symnum.numpy.sqrt"]], "subtract() (in module symnum.numpy)": [[7, "symnum.numpy.subtract"]], "sum() (in module symnum.numpy)": [[7, "symnum.numpy.sum"]], "symnum.numpy": [[7, "module-symnum.numpy"]], "tan() (in module symnum.numpy)": [[7, "symnum.numpy.tan"]], "tanh() (in module symnum.numpy)": [[7, "symnum.numpy.tanh"]], "zeros() (in module symnum.numpy)": [[7, "symnum.numpy.zeros"]]}})